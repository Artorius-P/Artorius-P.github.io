import{_ as a,c as n,o as i,ag as p}from"./chunks/framework.tfLYlFWj.js";const k=JSON.parse('{"title":"NGINX Docker 的使用","description":"","frontmatter":{"title":"NGINX Docker 的使用","date":"2020-05-01T00:00:00.000Z","lang":"zh_CN","categories":["折腾日常"]},"headers":[],"relativePath":"daily/2020-05-01-1.md","filePath":"daily/2020-05-01-1.md","lastUpdated":1758246806000}'),e={name:"daily/2020-05-01-1.md"};function t(l,s,c,h,d,o){return i(),n("div",null,[...s[0]||(s[0]=[p(`<h1 id="nginx-docker-的使用" tabindex="-1">NGINX Docker 的使用 <a class="header-anchor" href="#nginx-docker-的使用" aria-label="Permalink to &quot;NGINX Docker 的使用&quot;">​</a></h1><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><ol><li><p>首先拉取镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker pull nginx</span></span></code></pre></div></li><li><p>接着将必要的配置文件拷贝出来</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker container run \\</span></span>
<span class="line"><span>		--rm \\ </span></span>
<span class="line"><span>		-d \\</span></span>
<span class="line"><span>		--name tmp-nginx \\</span></span>
<span class="line"><span>		nginx</span></span></code></pre></div><p>各参数的含义：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--rm 在容器运行结束时删除容器</span></span>
<span class="line"><span>-d 后台运行容器</span></span>
<span class="line"><span>--name 自定义容器名</span></span></code></pre></div><p>然后新建目录</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ mkdir nginx</span></span>
<span class="line"><span>$ cd nginx</span></span></code></pre></div><p>拷贝配置文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker container cp tmp-nginx:/etc/nginx .</span></span>
<span class="line"><span>$ mv nginx conf</span></span>
<span class="line"><span>$ docker container cp tmp-nginx:/usr/share/nginx .</span></span>
<span class="line"><span>$ mv nginx www</span></span></code></pre></div><p>现在可以删除刚刚的容器了</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker container stop tmp-nginx</span></span></code></pre></div></li></ol><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><ol><li><p>配置ssl证书</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ cd conf</span></span>
<span class="line"><span>$ mkdir certs</span></span></code></pre></div><p>将证书拷贝进certs文件夹</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ cd ../conf.d</span></span>
<span class="line"><span>$ cp default.conf yoursite.conf</span></span></code></pre></div><p>修改<code>yoursite.conf</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>加一个这个来强制https</span></span>
<span class="line"><span>###########################</span></span>
<span class="line"><span>server {</span></span>
<span class="line"><span>    listen 80;</span></span>
<span class="line"><span>    server_name www.yoursite.com;</span></span>
<span class="line"><span>    rewrite ^(.*)$ https://\${server_name}$1 permanent; </span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>###########################</span></span>
<span class="line"><span>然后下面的证书配置一下</span></span>
<span class="line"><span>server {</span></span>
<span class="line"><span>    listen       443 ssl http2;</span></span>
<span class="line"><span>    server_name  www.yoursite.com;</span></span>
<span class="line"><span>    ssl_certificate    /etc/nginx/certs/yourcert;</span></span>
<span class="line"><span>    ssl_certificate_key      /etc/nginx/certs/yourkey;</span></span>
<span class="line"><span>    ssl_session_timeout  5m;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>然后就可以启动nginx的容器了</p><p>最好写成bash脚本方便启动</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yourconfpath/nginx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/conf:/etc/nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/www:/usr/share/nginx/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 443:443</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        nginx</span></span></code></pre></div><p>参数含义:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-v 将本地文件映射到docker容器</span></span>
<span class="line"><span>-p 将本地端口映射到docker容器</span></span></code></pre></div><p>然后么，基本就完事了</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker ps -a</span></span></code></pre></div><p>看一看有没有在运行</p><p>打开网页看一看有没有显示，就OK 了。其他包括apache啊，caddy啊，wordpress之类的镜像大同小异。</p><p>写个博客记录一下，怕自己把命令给忘了。</p></li></ol>`,5)])])}const g=a(e,[["render",t]]);export{k as __pageData,g as default};
