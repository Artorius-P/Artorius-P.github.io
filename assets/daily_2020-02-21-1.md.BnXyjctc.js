import{_ as s,c as i,o as t,ag as e}from"./chunks/framework.tfLYlFWj.js";const k=JSON.parse('{"title":"让终端走代理的方法","description":"","frontmatter":{},"headers":[],"relativePath":"daily/2020-02-21-1.md","filePath":"daily/2020-02-21-1.md","lastUpdated":1758246806000}'),p={name:"daily/2020-02-21-1.md"};function n(h,a,o,l,d,c){return t(),i("div",null,[...a[0]||(a[0]=[e('<h1 id="让终端走代理的方法" tabindex="-1">让终端走代理的方法 <a class="header-anchor" href="#让终端走代理的方法" aria-label="Permalink to &quot;让终端走代理的方法&quot;">​</a></h1><h2 id="_1-使用环境变量" tabindex="-1">1. 使用环境变量 <a class="header-anchor" href="#_1-使用环境变量" aria-label="Permalink to &quot;1. 使用环境变量&quot;">​</a></h2><p>一般来说，我会直接这么写一个别名。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proxyon=&quot;export ALL_PROXY=socks5://127.0.0.1:1080 &amp;&amp; export http_proxy=socks5://127.0.0.1:1080 &amp;&amp; export https_proxy=socks5://127.0.0    .1:1080&quot;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proxyoff=&quot;unset ALL_PROXY &amp;&amp; unset https_proxy &amp;&amp; unset http_proxy&quot;</span></span></code></pre></div><p>但是这么做<code>wget</code>会报错,于是我又找到第二种方法。</p><h2 id="_2-使用proxychains" tabindex="-1">2. 使用<code>proxychains</code> <a class="header-anchor" href="#_2-使用proxychains" aria-label="Permalink to &quot;2. 使用`proxychains`&quot;">​</a></h2><p>直接</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proxychains</span></span></code></pre></div><p>然后再</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/proxychains.conf</span></span></code></pre></div><p>在文件最下面添加<code>socks5 127.0.0.1 1080</code></p><p>以后再需要用代理的时候就直接这样</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">proxychains</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yourapp</span></span></code></pre></div><p>就可以强制该软件使用代理了。</p><p>注意事项:</p><ol><li>要选 <code>dynamic_chain</code> 而不是 <code>random_chain</code></li><li>可以列举几个代理服务器，<code>proxychains</code> 会按顺序用，代理无法访问即自动选用下一个</li><li>代理服务器要根据自己电脑的情况自行调整</li></ol>',16)])])}const g=s(p,[["render",n]]);export{k as __pageData,g as default};
