import{_ as e,c as t,o as x,ag as _}from"./chunks/framework.tfLYlFWj.js";const f=JSON.parse('{"title":"数值分析公式汇总","description":"","frontmatter":{"title":"数值分析公式汇总","date":"2020-05-09T00:00:00.000Z","lang":"zh_CN","categories":["学习笔记"]},"headers":[],"relativePath":"study/2020-05-09-1.md","filePath":"study/2020-05-09-1.md","lastUpdated":1758246806000}'),r={name:"study/2020-05-09-1.md"};function i(p,a,h,l,$,o){return x(),t("div",null,[...a[0]||(a[0]=[_('<h1 id="数值分析公式汇总" tabindex="-1">数值分析公式汇总 <a class="header-anchor" href="#数值分析公式汇总" aria-label="Permalink to &quot;数值分析公式汇总&quot;">​</a></h1><h2 id="第2章-非线性方程的数值解法" tabindex="-1">第2章 非线性方程的数值解法 <a class="header-anchor" href="#第2章-非线性方程的数值解法" aria-label="Permalink to &quot;第2章 非线性方程的数值解法&quot;">​</a></h2><h3 id="_1-一般迭代法" tabindex="-1">1. 一般迭代法 <a class="header-anchor" href="#_1-一般迭代法" aria-label="Permalink to &quot;1. 一般迭代法&quot;">​</a></h3><p>对于给定的非线性方程</p><p>$$f(x)=0$$</p><p>将其等价变换为如下形式：</p><p>$$x = g(x)$$</p><p>建立迭代格式</p><p>$$x_{k+1}=g(x_{k})$$</p><h3 id="_2-牛顿迭代法" tabindex="-1">2. 牛顿迭代法 <a class="header-anchor" href="#_2-牛顿迭代法" aria-label="Permalink to &quot;2. 牛顿迭代法&quot;">​</a></h3><p>迭代函数：</p><p>$$g(x)=x-\\frac{f(x)}{f&#39;(x)}$$</p><p>即，</p><p>$$x_{k+1}=x_{k}-\\frac{f(x_{k})}{f&#39;(x_{k})}$$</p><h3 id="_3-弦截法" tabindex="-1">3. 弦截法 <a class="header-anchor" href="#_3-弦截法" aria-label="Permalink to &quot;3. 弦截法&quot;">​</a></h3><p>迭代函数:</p><p>$$x_{k+1}=x_k-\\frac{f(x_k)}{f(x_k)-f(x_{k-1})}(x_k-x_{k-1})$$</p><h2 id="第3章-线性代数方程组的数值解法" tabindex="-1">第3章 线性代数方程组的数值解法 <a class="header-anchor" href="#第3章-线性代数方程组的数值解法" aria-label="Permalink to &quot;第3章 线性代数方程组的数值解法&quot;">​</a></h2><h3 id="_1-高斯消去法、高斯-若当消去法" tabindex="-1">1.高斯消去法、高斯-若当消去法 <a class="header-anchor" href="#_1-高斯消去法、高斯-若当消去法" aria-label="Permalink to &quot;1.高斯消去法、高斯-若当消去法&quot;">​</a></h3><ol><li><p>高斯消去法：</p><p>将线性方程组的系数矩阵转化为上三角矩阵，然后回代。</p></li><li><p>高斯-若当法：</p><p>将系数矩阵化为单位阵，从而避免了回代。</p></li><li><p>全主元法：</p><p>在系数矩阵中每次选取最大的系数，换行换列，归一消元。</p></li><li><p>列主元法：</p><p>选取每一列的最大元素，换行，消元。</p></li></ol><h3 id="_2-矩阵分解法" tabindex="-1">2. 矩阵分解法 <a class="header-anchor" href="#_2-矩阵分解法" aria-label="Permalink to &quot;2. 矩阵分解法&quot;">​</a></h3><ol><li><p>克洛特分解法：</p><p>对原方程$\\mathbf{A}\\mathbf{x}=\\mathbf{b}$，转化为$(\\mathbf{LU})\\mathbf{x}=\\mathbf{b}$</p><p>系数矩阵$\\mathbf{A}=(\\mathbf{LU})$</p><p>其中$\\mathbf{U}$ 的主对角线全为1</p><p>求解此方程组等价于依次求解线性方程组</p><p>$$f(\\mathbf{x})=\\left{\\begin{matrix}\\mathbf{Ly} &amp; = &amp; \\mathbf{b} \\\\mathbf{Ux} &amp; = &amp; \\mathbf{y} \\end{matrix}\\right.$$</p></li><li><p>追赶法</p></li></ol><h2 id="第4章-函数的插值与拟合法" tabindex="-1">第4章 函数的插值与拟合法 <a class="header-anchor" href="#第4章-函数的插值与拟合法" aria-label="Permalink to &quot;第4章 函数的插值与拟合法&quot;">​</a></h2><h3 id="_1-拉格朗日插值多项式" tabindex="-1">1. 拉格朗日插值多项式 <a class="header-anchor" href="#_1-拉格朗日插值多项式" aria-label="Permalink to &quot;1. 拉格朗日插值多项式&quot;">​</a></h3><p>$$L_n(x)=\\sum\\limits_{i=0}^{n}y_i\\prod\\limits_{j\\ne i,j=0}^{n}\\frac{x-x_j}{x_i-x_j}$$</p><h3 id="_2-牛顿插值多项式" tabindex="-1">2. 牛顿插值多项式 <a class="header-anchor" href="#_2-牛顿插值多项式" aria-label="Permalink to &quot;2. 牛顿插值多项式&quot;">​</a></h3><h4 id="均差" tabindex="-1">均差 <a class="header-anchor" href="#均差" aria-label="Permalink to &quot;均差&quot;">​</a></h4><p>一阶均差：</p><p>设$f(x)$在区间$[a,b]$上连续，若$x_0\\in[a,b]$，则定义</p><p>$$g_1(x)=\\frac{f(x)-f(x_0)}{x-x_0}$$</p><p>为$f(x)$在$[a,b]$上关于点$x_0$的一阶均差函数，记为$f[x_0,x]$。</p><p>进一步，定义：</p><p>$$g_2(x)=\\frac{g_1(x)-g_1(x_1)}{x-x_1}=\\frac{f[x_0,x]-f[x_0,x_1]}{x-x_1}$$</p><h4 id="插值法" tabindex="-1">插值法 <a class="header-anchor" href="#插值法" aria-label="Permalink to &quot;插值法&quot;">​</a></h4><p>$$\\begin{matrix}f(x)=f(x_0)+f<a href="./x-x_0.html">x_0,x_1</a>+f<a href="./x-x_0.html">x_0,x_1,x_2</a>(x-x_1)\\+...+f<a href="./x-x_0.html">x_0,x_1,...,x_n</a>(x-x_1)...(x-x_{n-1})\\+f<a href="./x-x_0.html">x_0,x_1,...,x_n,x</a>(x-x_1)...(x-x_n)\\end{matrix}$$</p><p>记作 $$f(x)=N_n(x)+R_n(x)$$</p><p>这里</p><p>$$N_n(x)=f(x_0)+\\sum\\limits_{k=1}^{n}f[x_0,x_1,...,x_k]\\omega_k(x)$$</p><p>为$n$次多项式，其中</p><p>$$\\omega_k=\\prod\\limits_{j=0}^{k-1}(x-x_j)(k=1,2,...,n)$$</p><p>$$R_n(x)=f[x_0,x_1,...,x_n,x]\\omega_{n+1}(x)$$</p><h2 id="第5章-插值型数值微分与数值积分" tabindex="-1">第5章 插值型数值微分与数值积分 <a class="header-anchor" href="#第5章-插值型数值微分与数值积分" aria-label="Permalink to &quot;第5章 插值型数值微分与数值积分&quot;">​</a></h2>',42)])])}const d=e(r,[["render",i]]);export{f as __pageData,d as default};
